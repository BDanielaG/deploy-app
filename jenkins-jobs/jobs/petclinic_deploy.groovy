job('petclinic-deploy') {
    description('Deploys PetClinic JAR from Nexus after successful build.')

    parameters {
        stringParam('GIT_COMMIT_HASH', '', 'The commit hash from which the artifact was built.')
    }

    label('jenkins-agent-maven')
    wrappers {
    credentialsBinding {
        usernamePassword('NEXUS_USER', 'NEXUS_PASSWORD', 'f7e715d6-f019-4302-939c-2f72df196039')
        sshUserPrivateKey {
                keyFileVariable('SSH_KEY_FILE')
                usernameVariable('TARGET_USER')
                credentialsId('SSH-auth-key-server')
            }
    }
    }
    logRotator {
        numToKeep(10)     
        daysToKeep(7)     
    }
    steps {
        shell('''

            echo "--- Deploy PetClinic for Commit: ${GIT_COMMIT_HASH} ---"
            rm -rf ci-scripts
            git clone http://gitea:3000/licenta/ci-scripts

            chmod +x ci-scripts/petclinic/deploy.sh
            ./ci-scripts/petclinic/deploy.sh ${GIT_COMMIT_HASH}
            
        ''')
    }
    publishers{
         extendedEmail {
            triggers{
                success{
                    recipientList ('danielaborc@gmail.com')
                    subject('successfully deployed new version for application petclinic')
                    contentType('text/html')
                    content('<br> This email was generated by build number <strong> ${BUILD_NUMBER} </strong>: <a href="${BUILD_URL}">${BUILD_URL}</a>')
                    sendTo{ recipientList()}
                }
                failure{
                    recipientList ('danielaborc@gmail.com')
                    subject('Deploy Job failed!')
                    contentType('text/html')
                    content('Please check build <a href="${BUILD_URL}">${BUILD_URL}</a> for logs.')
                    sendTo{ recipientList()}
                }
            }
        }
    }

}
