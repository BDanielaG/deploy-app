job('petclinic-validation') {
    description('Runs tests and SonarQube analysis on Gitea push')

    scm {
        git {
            remote {
                url('http://gitea:3000/licenta/project-petclinic')
            }
            branch('main')
        }
    }

    label('jenkins-agent-maven')
    logRotator {
        numToKeep(10)     
        daysToKeep(7)     
    }
    triggers {
        genericTrigger {
            genericVariables {
                genericVariable {
                    key("ref")
                    value("\$.ref")
                }
            }

            token('gitea-petclinic-project')
            causeString('Triggered by Gitea push')
            regexpFilterText("\$ref")
            regexpFilterExpression("refs/heads/main")
        }
    }

       wrappers {
        credentialsBinding {
            string('JENKINS_TOKEN','jenkins-api-token')
            string('SONAR_TOKEN', '	e03cb41c-b23a-4ba3-857c-23be49287eae')
        }
    }

    steps {
        shell('''

        export GIT_COMMIT=$(git rev-parse HEAD)
        echo "Commit: $GIT_COMMIT"
        git clone --depth 1 http://gitea:3000/licenta/ci-scripts
        chmod +x ci-scripts/petclinic/sonarqube-analysis.sh
        ./ci-scripts/petclinic/sonarqube-analysis.sh
        ''')
    }
    publishers {
        extendedEmail {
            triggers{
                success{
                    recipientList ('danielaborc@gmail.com')
                    subject('Validation Job passed succesfully')
                    contentType('text/html')
                    content('<br> This report was generated by build number <strong> ${BUILD_NUMBER} </strong>: <a href="${BUILD_URL}">${BUILD_URL}</a>')
                    sendTo{ recipientList()}
                }
                failure{
                    recipientList ('danielaborc@gmail.com')
                    subject('Validation Job failed!')
                    contentType('text/html')
                    content('Please check build <a href="${BUILD_URL}">${BUILD_URL}</a> for logs.')
                    sendTo{ recipientList()}
                }
            }
        }
    }
}
