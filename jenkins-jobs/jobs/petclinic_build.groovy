job('petclinic-build') {
    description('Builds and uploads PetClinic JAR to Nexus using commit hash in version.')

    parameters {
        stringParam('GIT_COMMIT_HASH', '', 'Commit hash to build and tag version with')
    }

    scm {
        git {
            remote {
                url('http://gitea:3000/licenta/project-petclinic')
            }
            branch('${GIT_COMMIT_HASH}')
            extensions {
                wipeOutWorkspace()
            }
        }
    }
    wrappers {
    credentialsBinding {
        usernamePassword('NEXUS_USER', 'NEXUS_PASSWORD', 'f7e715d6-f019-4302-939c-2f72df196039')
    }
}
    logRotator {
        numToKeep(10)     
        daysToKeep(7)     
    }
    label('jenkins-agent-maven')
    steps {
        shell('''
            echo "--- Building PetClinic for Commit: ${GIT_COMMIT_HASH} ---"

            # Clone CI script repo
            rm -rf ci-scripts
            git clone http://gitea:3000/licenta/ci-scripts

            chmod +x ci-scripts/petclinic/build.sh
            ./ci-scripts/petclinic/build.sh ${GIT_COMMIT_HASH}
        ''')
    }

    publishers {
         extendedEmail {
            triggers{
                success{
                    recipientList ('danielaborc@gmail.com')
                    subject('Build job SUCCESS')
                    contentType('text/html')
                    content('<br> This email was generated by build number <strong> ${BUILD_NUMBER} </strong>: <a href="${BUILD_URL}">${BUILD_URL}</a>')
                    sendTo{ recipientList()}
                }
                failure{
                    recipientList ('danielaborc@gmail.com')
                    subject('Build Job failed!')
                    contentType('text/html')
                    content('Please check build <a href="${BUILD_URL}">${BUILD_URL}</a> for logs.')
                    sendTo{ recipientList()}
                }
            }
        }
        archiveArtifacts {
            pattern('target/*.jar')
            onlyIfSuccessful()
        }
        downstreamParameterized {
            trigger('petclinic-deploy') {
                condition('SUCCESS')
                parameters {
                    predefinedProp('GIT_COMMIT_HASH', '${GIT_COMMIT}')
                }
            }
        }
    }
}
 